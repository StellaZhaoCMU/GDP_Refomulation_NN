*$include seed.gms
execseed =         4;

Set box number of boxes /1*12/;
parameter boxes_param;
boxes_param=UniformInt(4,card(box));
Scalar heigth packing box height;
heigth=UniformInt(10,20);

Parameter
    h(box) heigth of boxes
    l(box) length of boxes;

loop(box$(ord(box)<=boxes_param),
   h(box) = UniformInt(2,5);
   l(box) = UniformInt(1,5);
);

Alias (box,j);
Alias (box,boxx,jj);

Set i disjuctive term /1*4/
    ij(box,j), ijk(box,j,i);

ij(box,j) = ord(box)<ord(j); ij(box,j)$(ord(box)>boxes_param or ord(j)>boxes_param)=no; ijk(ij,i) = yes;

Set ijX(box,j);
option ijX<ij;

display h,l,heigth;

set
    var variables /1*40/
    k   disjunctions /1*100/
    e   max number of equations per disjunction /1*3/
    ge  global constraints /1*20/
    ki(k,i)  set that contains disjunctions and terms
    kie(k,i,e) set that contains disjunctions terms and equations
    kv(k,var) set that contains disjunctions and variables
 ;

parameter term(k), eq_term(k,i), A(k,i,e,var), b(k,i,e), c(var), ub(var), lb(var), Aglob(ge,var), bglo(ge);
scalar cnt1 /1/
       cnt2 /1/
;


ki(k,i)=no;
loop(ij, ki(k,i)$(ord(k)=cnt1)=yes;cnt1=cnt1+1;);
cnt1=1;

kie(k,i,e)=no;
loop((k,i,e)$ki(k,i),
   if(ord(i)=1 or ord(i)=2, kie(k,i,'1')=yes;);
   if(ord(i)=3 or ord(i)=4, kie(k,i,e)=yes;);
);

display kie;

loop(ge$(ord(ge)<=boxes_param),
   Aglob(ge,var)$(ord(var)=ord(ge)) = 1;
   bglo(ge) = sum(box$(ord(box)=ord(ge)),l(box));
);


kv(k,var)=no;

loop(ij(box,j),
   b(k,'1','1')$(ord(k)=cnt1) = -l(box);
   A(k,'1','1',var)$(ord(k)=cnt1 and ord(var)=ord(box)) = 1;
   A(k,'1','1',var)$(ord(k)=cnt1 and ord(var)=ord(j))   = -1;

   b(k,'2','1')$(ord(k)=cnt1) = -l(j);
   A(k,'2','1',var)$(ord(k)=cnt1 and ord(var)=ord(box)) = -1;
   A(k,'2','1',var)$(ord(k)=cnt1 and ord(var)=ord(j))   = 1;

   b(k,'3','1')$(ord(k)=cnt1) = -h(box);
   A(k,'3','1',var)$(ord(k)=cnt1 and ord(var)=(ord(box)+boxes_param)) = -1;
   A(k,'3','1',var)$(ord(k)=cnt1 and ord(var)=(ord(j)+boxes_param))   = 1;

   b(k,'3','2')$(ord(k)=cnt1) = l(j)-1;
   A(k,'3','2',var)$(ord(k)=cnt1 and ord(var)=ord(box)) = 1;
   A(k,'3','2',var)$(ord(k)=cnt1 and ord(var)=ord(j))   = -1;

   b(k,'3','3')$(ord(k)=cnt1) = l(box)-1;
   A(k,'3','3',var)$(ord(k)=cnt1 and ord(var)=ord(box)) = -1;
   A(k,'3','3',var)$(ord(k)=cnt1 and ord(var)=ord(j))   = 1;

   b(k,'4','1')$(ord(k)=cnt1) = -h(j);
   A(k,'4','1',var)$(ord(k)=cnt1 and ord(var)=(ord(box)+boxes_param)) = 1;
   A(k,'4','1',var)$(ord(k)=cnt1 and ord(var)=(ord(j)+boxes_param))   = -1;

   b(k,'4','2')$(ord(k)=cnt1) = l(j)-1;
   A(k,'4','2',var)$(ord(k)=cnt1 and ord(var)=ord(box)) = 1;
   A(k,'4','2',var)$(ord(k)=cnt1 and ord(var)=ord(j))   = -1;

   b(k,'4','3')$(ord(k)=cnt1) = l(box)-1;
   A(k,'4','3',var)$(ord(k)=cnt1 and ord(var)=ord(box)) = -1;
   A(k,'4','3',var)$(ord(k)=cnt1 and ord(var)=ord(j))   = 1;

   cnt1=cnt1+1;
);

kv(k,var)$( sum((i,e)$(A(k,i,e,var)<>0),1)>=1 )=yes;

loop(box$(ord(box)<=boxes_param),
   ub(var)$(ord(var)=ord(box)) = sum(j, l(j));
   lb(var)$(ord(var)=ord(box)) = 0;
   ub(var)$(ord(var)=(ord(box)+boxes_param)) = heigth;
   lb(var)$(ord(var)=(ord(box)+boxes_param)) = h(box);
);






variables cost, x(var);
binary variable y(k,i);
equation obj(ge), disj_ineq(k,i,e), sum_bin(k);

obj(ge)$(ord(ge)<=boxes_param).. cost =g= sum(var,Aglob(ge,var)*x(var))+bglo(ge);
disj_ineq(kie(ki(k,i),e)).. sum(var$(A(k,i,e,var)<>0),A(kie,var)*x(var)) =l= b(kie) + (sum(var$kv(k,var),x.up(var))+1)*(1-y(ki));

sum_bin(k)$(sum(ki(k,i),1)>=1).. sum(ki(k,i),y(ki)) =e= 1;

model prob /obj,disj_ineq,sum_bin/;

option optcr = 0.001
       reslim = 72000
*       mip=BDMLP
*       mip=CBC
*       mip=SCIP
*       rmip=CBC
  ;
*prob.nodlim=1000000;

x.lo(var) = lb(var);
x.up(var) = ub(var);

*y.fx(k,'1')$(ord(k)<=10)=1;
*y.fx('1','1')=1;

$include max_time_ref

scalar rel,sol,nodes,time,LBL,const,vars,bin;

solve prob using mip min cost;



